[2025-07-25T04:00:30.577+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: bis_pipeline_dag.kafka_to_bronze manual__2025-07-25T04:00:23.657486+00:00 [queued]>
[2025-07-25T04:00:30.583+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: bis_pipeline_dag.kafka_to_bronze manual__2025-07-25T04:00:23.657486+00:00 [queued]>
[2025-07-25T04:00:30.583+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 1
[2025-07-25T04:00:30.617+0000] {taskinstance.py:2191} INFO - Executing <Task(DockerOperator): kafka_to_bronze> on 2025-07-25 04:00:23.657486+00:00
[2025-07-25T04:00:30.620+0000] {standard_task_runner.py:60} INFO - Started process 1558 to run task
[2025-07-25T04:00:30.622+0000] {standard_task_runner.py:87} INFO - Running: ['airflow', 'tasks', 'run', 'bis_pipeline_dag', 'kafka_to_bronze', 'manual__2025-07-25T04:00:23.657486+00:00', '--job-id', '54', '--raw', '--subdir', 'DAGS_FOLDER/bis_pipeline_dag.py', '--cfg-path', '/tmp/tmp43ihms_l']
[2025-07-25T04:00:30.623+0000] {standard_task_runner.py:88} INFO - Job 54: Subtask kafka_to_bronze
[2025-07-25T04:00:30.691+0000] {task_command.py:423} INFO - Running <TaskInstance: bis_pipeline_dag.kafka_to_bronze manual__2025-07-25T04:00:23.657486+00:00 [running]> on host f2fb5fb74adc
[2025-07-25T04:00:30.801+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='bis_pipeline_dag' AIRFLOW_CTX_TASK_ID='kafka_to_bronze' AIRFLOW_CTX_EXECUTION_DATE='2025-07-25T04:00:23.657486+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-07-25T04:00:23.657486+00:00'
[2025-07-25T04:00:30.857+0000] {docker.py:359} INFO - Starting docker container from image my-spark:3.3-kafka
[2025-07-25T04:00:33.571+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m04:00:33.27 [0m[38;5;2mINFO [0m ==>
[2025-07-25T04:00:33.571+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m04:00:33.27 [0m[38;5;2mINFO [0m ==> [1mWelcome to the Bitnami spark container[0m
[2025-07-25T04:00:33.572+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m04:00:33.27 [0m[38;5;2mINFO [0m ==> Subscribe to project updates by watching [1mhttps://github.com/bitnami/containers[0m
[2025-07-25T04:00:33.572+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m04:00:33.27 [0m[38;5;2mINFO [0m ==> Submit issues and feature requests at [1mhttps://github.com/bitnami/containers/issues[0m
[2025-07-25T04:00:33.572+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m04:00:33.27 [0m[38;5;2mINFO [0m ==>
[2025-07-25T04:00:33.572+0000] {docker.py:429} INFO - 
[2025-07-25T04:00:35.131+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO SparkContext: Running Spark version 3.3.4
[2025-07-25T04:00:35.154+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO ResourceUtils: ==============================================================
[2025-07-25T04:00:35.154+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO ResourceUtils: No custom resources configured for spark.driver.
[2025-07-25T04:00:35.154+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO ResourceUtils: ==============================================================
[2025-07-25T04:00:35.154+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO SparkContext: Submitted application: IngestBronze
[2025-07-25T04:00:35.168+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
[2025-07-25T04:00:35.173+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO ResourceProfile: Limiting resource is cpu
[2025-07-25T04:00:35.173+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO ResourceProfileManager: Added ResourceProfile id: 0
[2025-07-25T04:00:35.198+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO SecurityManager: Changing view acls to: root,spark
[2025-07-25T04:00:35.199+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO SecurityManager: Changing modify acls to: root,spark
[2025-07-25T04:00:35.199+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO SecurityManager: Changing view acls groups to:
[2025-07-25T04:00:35.199+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO SecurityManager: Changing modify acls groups to:
[2025-07-25T04:00:35.199+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(root, spark); groups with view permissions: Set(); users  with modify permissions: Set(root, spark); groups with modify permissions: Set()
[2025-07-25T04:00:35.238+0000] {docker.py:429} INFO - 25/07/25 04:00:35 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2025-07-25T04:00:35.397+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO Utils: Successfully started service 'sparkDriver' on port 38529.
[2025-07-25T04:00:35.413+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO SparkEnv: Registering MapOutputTracker
[2025-07-25T04:00:35.437+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO SparkEnv: Registering BlockManagerMaster
[2025-07-25T04:00:35.448+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
[2025-07-25T04:00:35.448+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
[2025-07-25T04:00:35.451+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
[2025-07-25T04:00:35.461+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-bb047bdb-2f3a-46e2-8887-6b807d8a662c
[2025-07-25T04:00:35.471+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB
[2025-07-25T04:00:35.480+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO SparkEnv: Registering OutputCommitCoordinator
[2025-07-25T04:00:35.592+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO Utils: Successfully started service 'SparkUI' on port 4040.
[2025-07-25T04:00:35.647+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO Executor: Starting executor ID driver on host 5c1304874469
[2025-07-25T04:00:35.651+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): ''
[2025-07-25T04:00:35.663+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 45499.
[2025-07-25T04:00:35.663+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO NettyBlockTransferService: Server created on 5c1304874469:45499
[2025-07-25T04:00:35.669+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
[2025-07-25T04:00:35.674+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 5c1304874469, 45499, None)
[2025-07-25T04:00:35.676+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO BlockManagerMasterEndpoint: Registering block manager 5c1304874469:45499 with 434.4 MiB RAM, BlockManagerId(driver, 5c1304874469, 45499, None)
[2025-07-25T04:00:35.677+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 5c1304874469, 45499, None)
[2025-07-25T04:00:35.678+0000] {docker.py:429} INFO - 25/07/25 04:00:35 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 5c1304874469, 45499, None)
[2025-07-25T04:00:37.312+0000] {docker.py:429} INFO - 25/07/25 04:00:37 WARN ResolveWriteToStream: Temporary checkpoint location created which is deleted normally when the query didn't fail: /tmp/temporary-e7cffee1-e5a1-44d3-bf3a-a732422c25a7. If it's required to delete it under any circumstances, please set spark.sql.streaming.forceDeleteTempCheckpointLocation to true. Important to know deleting temp checkpoint folder is best effort.
[2025-07-25T04:00:37.324+0000] {docker.py:429} INFO - 25/07/25 04:00:37 WARN ResolveWriteToStream: spark.sql.adaptive.enabled is not supported in streaming DataFrames/Datasets and will be disabled.
[2025-07-25T04:00:39.319+0000] {docker.py:429} INFO - +------------+----+-----------+-----------+---------+-----------------+---------+--------------+-----------------+-------+
|VEHICLENO   |RNUM|PREVSTOPCNT|ARRIVALTIME|ROUTEID  |REMARK           |STOPID   |STOPNM        |PRESENTSTOPNM    |ROUTENM|
+------------+----+-----------+-----------+---------+-----------------+---------+--------------+-----------------+-------+
|Ïö∏ÏÇ∞71Ïûê2226|1   |7          |591        |195000199|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|ÎçïÏã†ÏÜåÍ≥µÏõê       |725    |
|Ïö∏ÏÇ∞71Ïûê3208|2   |7          |593        |196000428|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|Ïò®ÏÇ∞Ïö∞Ï≤¥Íµ≠Ïïû     |518    |
|Ïö∏ÏÇ∞71Ïûê2672|3   |8          |608        |196000384|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|Ïô∏Í≥†ÏÇ∞ÏòπÍ∏∞ÎßàÏùÑ   |415    |
|Ïö∏ÏÇ∞71Ïûê3208|1   |5          |381        |196000428|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|Î∞±Í≥®Î∂ÄÎåÄÏÑ±Ïó≠ÏßÄ   |518    |
|Ïö∏ÏÇ∞71Ïûê2226|2   |6          |504        |195000199|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|Ïò®ÏÇ∞Ïùç ÌñâÏ†ïÎ≥µÏßÄÏÑº|725    |
|Ïö∏ÏÇ∞71Ïûê2672|3   |7          |504        |196000384|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|Ïò®ÏÇ∞Ïö∞Ï≤¥Íµ≠Ïïû     |415    |
|Ïö∏ÏÇ∞71Ïûê3208|1   |4          |273        |196000428|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|Í≥µÎã®Ï§ëÍ∏∞Ïïû       |518    |
|Ïö∏ÏÇ∞71Ïûê2226|2   |5          |305        |195000199|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|Î∞±Í≥®Î∂ÄÎåÄÏÑ±Ïó≠ÏßÄ   |725    |
|Ïö∏ÏÇ∞71Ïûê2672|3   |5          |368        |196000384|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|Î∞±Í≥®Î∂ÄÎåÄÏÑ±Ïó≠ÏßÄ   |415    |
|Ïö∏ÏÇ∞71Ïûê3208|1   |1          |92         |196000428|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|ÎåÄÌïúÏú†ÌôîÏïû       |518    |
|Ïö∏ÏÇ∞71Ïûê2226|2   |2          |170        |195000199|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|S-oilÏ†ïÎ¨∏        |725    |
|Ïö∏ÏÇ∞71Ïûê2672|3   |4          |273        |196000384|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|Í≥µÎã®Ï§ëÍ∏∞Ïïû       |415    |
|Ïö∏ÏÇ∞71Ïûê2230|1   |1          |92         |195000199|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|ÎåÄÌïúÏú†ÌôîÏïû       |725    |
|Ïö∏ÏÇ∞71Ïûê2722|2   |7          |597        |196000384|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|Ïò®ÏÇ∞Ïö∞Ï≤¥Íµ≠Ïïû     |415    |
|Ïö∏ÏÇ∞71Ïûê3210|3   |13         |963        |196000428|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|ÎßùÏñëÎßàÏùÑ         |518    |
|Ïö∏ÏÇ∞71Ïûê2230|1   |0          |41         |195000199|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|ÌöåÌïôÎßàÏùÑÏûÖÍµ¨     |725    |
|Ïö∏ÏÇ∞71Ïûê2722|2   |5          |402        |196000384|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|Î∞±Í≥®Î∂ÄÎåÄÏÑ±Ïó≠ÏßÄ   |415    |
|Ïö∏ÏÇ∞71Ïûê3210|3   |12         |927        |196000428|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|Ïò§ÏÇ∞ÎßàÏùÑÏûÖÍµ¨     |518    |
|Ïö∏ÏÇ∞71Ïûê2265|1   |8          |715        |195000199|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|ÏßÑÏòÅÌîÑÎ¶¨ÌÖîÏïû     |725    |
|Ïö∏ÏÇ∞71Ïûê3278|2   |13         |1008       |196000428|Ï≤òÏö©ÎßàÏùÑÏûÖÍµ¨ Î∞©Î©¥|196040122|(Ï£º)TCTÏ†ú2Í≥µÏû•|ÎßùÏñëÎßàÏùÑ         |518    |
+------------+----+-----------+-----------+---------+-----------------+---------+--------------+-----------------+-------+
[2025-07-25T04:00:39.405+0000] {docker.py:429} INFO - 25/07/25 04:00:39 WARN MetricsConfig: Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties
[2025-07-25T04:00:43.902+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=bis_pipeline_dag, task_id=kafka_to_bronze, execution_date=20250725T040023, start_date=20250725T040030, end_date=20250725T040043
[2025-07-25T04:00:43.971+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2025-07-25T04:00:43.991+0000] {taskinstance.py:3280} INFO - 1 downstream tasks scheduled from follow-on schedule check
