[2025-07-25T02:28:53.648+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: bis_pipeline_dag.kafka_to_bronze manual__2025-07-25T02:28:49.796008+00:00 [queued]>
[2025-07-25T02:28:53.653+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: bis_pipeline_dag.kafka_to_bronze manual__2025-07-25T02:28:49.796008+00:00 [queued]>
[2025-07-25T02:28:53.653+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 1
[2025-07-25T02:28:53.692+0000] {taskinstance.py:2191} INFO - Executing <Task(DockerOperator): kafka_to_bronze> on 2025-07-25 02:28:49.796008+00:00
[2025-07-25T02:28:53.695+0000] {standard_task_runner.py:60} INFO - Started process 656 to run task
[2025-07-25T02:28:53.697+0000] {standard_task_runner.py:87} INFO - Running: ['airflow', 'tasks', 'run', 'bis_pipeline_dag', 'kafka_to_bronze', 'manual__2025-07-25T02:28:49.796008+00:00', '--job-id', '49', '--raw', '--subdir', 'DAGS_FOLDER/bis_pipeline_dag.py', '--cfg-path', '/tmp/tmplex_2tlg']
[2025-07-25T02:28:53.698+0000] {standard_task_runner.py:88} INFO - Job 49: Subtask kafka_to_bronze
[2025-07-25T02:28:53.762+0000] {task_command.py:423} INFO - Running <TaskInstance: bis_pipeline_dag.kafka_to_bronze manual__2025-07-25T02:28:49.796008+00:00 [running]> on host f2fb5fb74adc
[2025-07-25T02:28:53.874+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='bis_pipeline_dag' AIRFLOW_CTX_TASK_ID='kafka_to_bronze' AIRFLOW_CTX_EXECUTION_DATE='2025-07-25T02:28:49.796008+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-07-25T02:28:49.796008+00:00'
[2025-07-25T02:28:53.911+0000] {docker.py:359} INFO - Starting docker container from image my-spark:3.3-kafka
[2025-07-25T02:28:56.276+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m02:28:56.11 [0m[38;5;2mINFO [0m ==>
[2025-07-25T02:28:56.276+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m02:28:56.11 [0m[38;5;2mINFO [0m ==> [1mWelcome to the Bitnami spark container[0m
[2025-07-25T02:28:56.276+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m02:28:56.11 [0m[38;5;2mINFO [0m ==> Subscribe to project updates by watching [1mhttps://github.com/bitnami/containers[0m
[2025-07-25T02:28:56.277+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m02:28:56.11 [0m[38;5;2mINFO [0m ==> Submit issues and feature requests at [1mhttps://github.com/bitnami/containers/issues[0m
[2025-07-25T02:28:56.277+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m02:28:56.12 [0m[38;5;2mINFO [0m ==>
[2025-07-25T02:28:56.277+0000] {docker.py:429} INFO - 
[2025-07-25T02:28:57.464+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO SparkContext: Running Spark version 3.3.4
[2025-07-25T02:28:57.481+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO ResourceUtils: ==============================================================
[2025-07-25T02:28:57.482+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO ResourceUtils: No custom resources configured for spark.driver.
[2025-07-25T02:28:57.482+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO ResourceUtils: ==============================================================
[2025-07-25T02:28:57.482+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO SparkContext: Submitted application: IngestBronze
[2025-07-25T02:28:57.494+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
[2025-07-25T02:28:57.498+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO ResourceProfile: Limiting resource is cpu
[2025-07-25T02:28:57.499+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO ResourceProfileManager: Added ResourceProfile id: 0
[2025-07-25T02:28:57.526+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO SecurityManager: Changing view acls to: root,spark
[2025-07-25T02:28:57.526+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO SecurityManager: Changing modify acls to: root,spark
[2025-07-25T02:28:57.526+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO SecurityManager: Changing view acls groups to:
[2025-07-25T02:28:57.527+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO SecurityManager: Changing modify acls groups to:
[2025-07-25T02:28:57.527+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(root, spark); groups with view permissions: Set(); users  with modify permissions: Set(root, spark); groups with modify permissions: Set()
[2025-07-25T02:28:57.567+0000] {docker.py:429} INFO - 25/07/25 02:28:57 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2025-07-25T02:28:57.742+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO Utils: Successfully started service 'sparkDriver' on port 38243.
[2025-07-25T02:28:57.760+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO SparkEnv: Registering MapOutputTracker
[2025-07-25T02:28:57.783+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO SparkEnv: Registering BlockManagerMaster
[2025-07-25T02:28:57.793+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
[2025-07-25T02:28:57.794+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
[2025-07-25T02:28:57.797+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
[2025-07-25T02:28:57.808+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-9769e3ca-20b6-43d4-b5c7-376b65673c93
[2025-07-25T02:28:57.819+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB
[2025-07-25T02:28:57.828+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO SparkEnv: Registering OutputCommitCoordinator
[2025-07-25T02:28:57.941+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO Utils: Successfully started service 'SparkUI' on port 4040.
[2025-07-25T02:28:57.997+0000] {docker.py:429} INFO - 25/07/25 02:28:57 INFO Executor: Starting executor ID driver on host f675a8b4f9d1
[2025-07-25T02:28:58.006+0000] {docker.py:429} INFO - 25/07/25 02:28:58 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): ''
[2025-07-25T02:28:58.019+0000] {docker.py:429} INFO - 25/07/25 02:28:58 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 43087.
[2025-07-25T02:28:58.019+0000] {docker.py:429} INFO - 25/07/25 02:28:58 INFO NettyBlockTransferService: Server created on f675a8b4f9d1:43087
[2025-07-25T02:28:58.019+0000] {docker.py:429} INFO - 25/07/25 02:28:58 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
[2025-07-25T02:28:58.022+0000] {docker.py:429} INFO - 25/07/25 02:28:58 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f675a8b4f9d1, 43087, None)
[2025-07-25T02:28:58.024+0000] {docker.py:429} INFO - 25/07/25 02:28:58 INFO BlockManagerMasterEndpoint: Registering block manager f675a8b4f9d1:43087 with 434.4 MiB RAM, BlockManagerId(driver, f675a8b4f9d1, 43087, None)
[2025-07-25T02:28:58.026+0000] {docker.py:429} INFO - 25/07/25 02:28:58 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f675a8b4f9d1, 43087, None)
[2025-07-25T02:28:58.026+0000] {docker.py:429} INFO - 25/07/25 02:28:58 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f675a8b4f9d1, 43087, None)
[2025-07-25T02:28:59.666+0000] {docker.py:429} INFO - 25/07/25 02:28:59 WARN ResolveWriteToStream: Temporary checkpoint location created which is deleted normally when the query didn't fail: /tmp/temporary-0f15f53e-1475-4c9e-8278-1700093ccf93. If it's required to delete it under any circumstances, please set spark.sql.streaming.forceDeleteTempCheckpointLocation to true. Important to know deleting temp checkpoint folder is best effort.
[2025-07-25T02:28:59.677+0000] {docker.py:429} INFO - 25/07/25 02:28:59 WARN ResolveWriteToStream: spark.sql.adaptive.enabled is not supported in streaming DataFrames/Datasets and will be disabled.
[2025-07-25T02:29:00.713+0000] {docker.py:429} INFO - +---------+----+-----------+-----------+-------+------+------+------+-------------+-------+
|VEHICLENO|RNUM|PREVSTOPCNT|ARRIVALTIME|ROUTEID|REMARK|STOPID|STOPNM|PRESENTSTOPNM|ROUTENM|
+---------+----+-----------+-----------+-------+------+------+------+-------------+-------+
+---------+----+-----------+-----------+-------+------+------+------+-------------+-------+
[2025-07-25T02:29:00.779+0000] {docker.py:429} INFO - 25/07/25 02:29:00 WARN MetricsConfig: Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties
[2025-07-25T02:29:30.026+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=bis_pipeline_dag, task_id=kafka_to_bronze, execution_date=20250725T022849, start_date=20250725T022853, end_date=20250725T022930
[2025-07-25T02:29:30.089+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2025-07-25T02:29:30.106+0000] {taskinstance.py:3280} INFO - 1 downstream tasks scheduled from follow-on schedule check
