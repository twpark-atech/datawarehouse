[2025-07-25T02:03:39.901+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: bis_pipeline_dag.kafka_to_bronze manual__2025-07-25T02:03:36.393331+00:00 [queued]>
[2025-07-25T02:03:39.906+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: bis_pipeline_dag.kafka_to_bronze manual__2025-07-25T02:03:36.393331+00:00 [queued]>
[2025-07-25T02:03:39.906+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 1
[2025-07-25T02:03:39.947+0000] {taskinstance.py:2191} INFO - Executing <Task(DockerOperator): kafka_to_bronze> on 2025-07-25 02:03:36.393331+00:00
[2025-07-25T02:03:39.951+0000] {standard_task_runner.py:60} INFO - Started process 283 to run task
[2025-07-25T02:03:39.953+0000] {standard_task_runner.py:87} INFO - Running: ['airflow', 'tasks', 'run', 'bis_pipeline_dag', 'kafka_to_bronze', 'manual__2025-07-25T02:03:36.393331+00:00', '--job-id', '42', '--raw', '--subdir', 'DAGS_FOLDER/bis_pipeline_dag.py', '--cfg-path', '/tmp/tmplgeokom_']
[2025-07-25T02:03:39.954+0000] {standard_task_runner.py:88} INFO - Job 42: Subtask kafka_to_bronze
[2025-07-25T02:03:40.015+0000] {task_command.py:423} INFO - Running <TaskInstance: bis_pipeline_dag.kafka_to_bronze manual__2025-07-25T02:03:36.393331+00:00 [running]> on host f2fb5fb74adc
[2025-07-25T02:03:40.125+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='bis_pipeline_dag' AIRFLOW_CTX_TASK_ID='kafka_to_bronze' AIRFLOW_CTX_EXECUTION_DATE='2025-07-25T02:03:36.393331+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-07-25T02:03:36.393331+00:00'
[2025-07-25T02:03:40.162+0000] {docker.py:359} INFO - Starting docker container from image my-spark:3.3-kafka
[2025-07-25T02:03:43.197+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m02:03:43.04 [0m[38;5;2mINFO [0m ==>
[2025-07-25T02:03:43.198+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m02:03:43.04 [0m[38;5;2mINFO [0m ==> [1mWelcome to the Bitnami spark container[0m
[2025-07-25T02:03:43.198+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m02:03:43.04 [0m[38;5;2mINFO [0m ==> Subscribe to project updates by watching [1mhttps://github.com/bitnami/containers[0m
[2025-07-25T02:03:43.198+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m02:03:43.04 [0m[38;5;2mINFO [0m ==> Submit issues and feature requests at [1mhttps://github.com/bitnami/containers/issues[0m
[2025-07-25T02:03:43.198+0000] {docker.py:429} INFO - [38;5;6mspark [38;5;5m02:03:43.04 [0m[38;5;2mINFO [0m ==>
[2025-07-25T02:03:43.198+0000] {docker.py:429} INFO - 
[2025-07-25T02:03:44.367+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO SparkContext: Running Spark version 3.3.4
[2025-07-25T02:03:44.387+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO ResourceUtils: ==============================================================
[2025-07-25T02:03:44.388+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO ResourceUtils: No custom resources configured for spark.driver.
[2025-07-25T02:03:44.388+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO ResourceUtils: ==============================================================
[2025-07-25T02:03:44.388+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO SparkContext: Submitted application: IngestBronze
[2025-07-25T02:03:44.401+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
[2025-07-25T02:03:44.406+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO ResourceProfile: Limiting resource is cpu
[2025-07-25T02:03:44.406+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO ResourceProfileManager: Added ResourceProfile id: 0
[2025-07-25T02:03:44.434+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO SecurityManager: Changing view acls to: root,spark
[2025-07-25T02:03:44.434+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO SecurityManager: Changing modify acls to: root,spark
[2025-07-25T02:03:44.434+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO SecurityManager: Changing view acls groups to:
[2025-07-25T02:03:44.434+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO SecurityManager: Changing modify acls groups to:
[2025-07-25T02:03:44.435+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(root, spark); groups with view permissions: Set(); users  with modify permissions: Set(root, spark); groups with modify permissions: Set()
[2025-07-25T02:03:44.468+0000] {docker.py:429} INFO - 25/07/25 02:03:44 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2025-07-25T02:03:44.615+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO Utils: Successfully started service 'sparkDriver' on port 41053.
[2025-07-25T02:03:44.637+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO SparkEnv: Registering MapOutputTracker
[2025-07-25T02:03:44.663+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO SparkEnv: Registering BlockManagerMaster
[2025-07-25T02:03:44.676+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
[2025-07-25T02:03:44.677+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
[2025-07-25T02:03:44.681+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
[2025-07-25T02:03:44.700+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-3fc4ad99-180d-4270-88b3-95a0c37374ac
[2025-07-25T02:03:44.713+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB
[2025-07-25T02:03:44.725+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO SparkEnv: Registering OutputCommitCoordinator
[2025-07-25T02:03:44.861+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO Utils: Successfully started service 'SparkUI' on port 4040.
[2025-07-25T02:03:44.920+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO Executor: Starting executor ID driver on host dd362df43ea2
[2025-07-25T02:03:44.924+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): ''
[2025-07-25T02:03:44.937+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 37263.
[2025-07-25T02:03:44.937+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO NettyBlockTransferService: Server created on dd362df43ea2:37263
[2025-07-25T02:03:44.938+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
[2025-07-25T02:03:44.948+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, dd362df43ea2, 37263, None)
[2025-07-25T02:03:44.952+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO BlockManagerMasterEndpoint: Registering block manager dd362df43ea2:37263 with 434.4 MiB RAM, BlockManagerId(driver, dd362df43ea2, 37263, None)
[2025-07-25T02:03:44.953+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, dd362df43ea2, 37263, None)
[2025-07-25T02:03:44.953+0000] {docker.py:429} INFO - 25/07/25 02:03:44 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, dd362df43ea2, 37263, None)
[2025-07-25T02:03:46.570+0000] {docker.py:429} INFO - 25/07/25 02:03:46 WARN ResolveWriteToStream: Temporary checkpoint location created which is deleted normally when the query didn't fail: /tmp/temporary-f9bd5dc8-e6a1-4f25-9c57-abfcd3347627. If it's required to delete it under any circumstances, please set spark.sql.streaming.forceDeleteTempCheckpointLocation to true. Important to know deleting temp checkpoint folder is best effort.
[2025-07-25T02:03:46.581+0000] {docker.py:429} INFO - 25/07/25 02:03:46 WARN ResolveWriteToStream: spark.sql.adaptive.enabled is not supported in streaming DataFrames/Datasets and will be disabled.
[2025-07-25T02:04:02.117+0000] {docker.py:429} INFO - +---------+----+-----------+-----------+-------+------+------+------+-------------+-------+
|VEHICLENO|RNUM|PREVSTOPCNT|ARRIVALTIME|ROUTEID|REMARK|STOPID|STOPNM|PRESENTSTOPNM|ROUTENM|
+---------+----+-----------+-----------+-------+------+------+------+-------------+-------+
+---------+----+-----------+-----------+-------+------+------+------+-------------+-------+
[2025-07-25T02:04:02.179+0000] {docker.py:429} INFO - 25/07/25 02:04:02 WARN MetricsConfig: Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties
[2025-07-25T02:04:16.996+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=bis_pipeline_dag, task_id=kafka_to_bronze, execution_date=20250725T020336, start_date=20250725T020339, end_date=20250725T020416
[2025-07-25T02:04:17.039+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2025-07-25T02:04:17.059+0000] {taskinstance.py:3280} INFO - 1 downstream tasks scheduled from follow-on schedule check
